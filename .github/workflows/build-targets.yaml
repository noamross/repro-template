name: Build Targets
on: [push]

jobs:
  build_targets:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Prepare Image Names and Decrypt Environment Variables
        id: prep
        env:
          GIT_CRYPT_KEY64: ${{ secrets.GIT_CRYPT_KEY64 }}
        run: |
          TAG=$(echo $GITHUB_SHA | head -c7)
          IMAGE=$GITHUB_REPOSITORY
          echo ::set-output name=tagged_image::${IMAGE}:${TAG}
          echo ::set-output name=tag::${TAG}
          sudo apt-get install git-crypt
          echo $GIT_CRYPT_KEY64 > git_crypt_key.key64 && base64 -d git_crypt_key.key64 > git_crypt_key.key && git-crypt unlock git_crypt_key.key
          rm git_crypt_key.key git_crypt_key.key64

      - name: Set up Docker BuildX to Use Advanced Build Options
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          install: true
          driver-opts: image=moby/buildkit:buildx-stable-1

      - name: Set up a cache for Docker, Targets, memoise
        uses: actions/cache@v2
        with:
          path: |
            /tmp/buildkit-cache/buildkit-state.tar
            _targets
            _cache
          key: ${{ runner.os }}-reprotemplate--${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-reprotemplate-

      - name: Load BuildX State from Cache
        uses: dashevo/gh-action-cache-buildkit-state@v1
        with:
          builder: buildx_buildkit_${{ steps.buildx.outputs.name }}0
          cache-path: /tmp/buildkit-cache
          cache-max-size: 5g

      - name: Build Docker Image using BuildX Cache
        run: |
          make image

      - name: Build Targets
        run: |
          make targets dock=1

      - name: On failure, launch a temporary interactive debugging session
        uses: mxschmitt/action-tmate@v3
        if: ${{ failure() }}
        timeout-minutes: 15

